@model ServiceOne.ViewModels.UserViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<!-- Content Header (Page header) -->
<div class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1 class="m-0 text-dark">Edit Users</h1>
            </div><!-- /.col -->
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">Starter Page</li>
                </ol>
            </div><!-- /.col -->
        </div><!-- /.row -->
    </div><!-- /.container-fluid -->
</div>
<!-- /.content-header -->
<!-- Main content -->
<div class="content">
    <div class="container-fluid">
        <div class="row">
            <div class="col col-lg-3">
                @Html.Partial("_SideUserSettings")
            </div>
            <div class="col-lg-9">
                <div class="card">
                    <div class="card-header">
                        <ul class="nav nav-tabs align-items-end card-header-tabs w-100">
                            <li class="nav-item">
                                <a class="nav-link" href="@Url.Action("Index", "Users")">
                                    <i class="fa fa-list mr-2"></i>User List
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="@Url.Action("Create", "Users")">
                                    <i class="fa fa-plus mr-2"></i>Create New
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link active" href="#">
                                    <i class="fa fa-edit mr-2"></i>Edit User
                                </a>
                            </li>
                        </ul>
                    </div>
                    <!-- /.card-header -->

                    <div class="card-body">
                        @Html.Partial("_MainFields", Model.main_fields)
                        <hr />
                        <nav class="w-100">
                            <div class="nav nav-tabs" id="product-tab" role="tablist">
                                <a class="nav-item nav-link active" id="product-desc-tab" data-toggle="tab" href="#product-desc" role="tab" aria-controls="product-desc" aria-selected="true">Custom Fields</a>
                                <a class="nav-item nav-link" id="product-comments-tab" data-toggle="tab" href="#product-comments" role="tab" aria-controls="product-comments" aria-selected="false">Security</a>
                                <a class="nav-item nav-link" id="product-zonasi-tab" data-toggle="tab" href="#product-zonasi" role="tab" aria-controls="product-zonasi" aria-selected="false">Zonasi</a>
                            </div>
                        </nav>
                        <div class="tab-content p-3" id="nav-tabContent">
                            <div class="tab-pane fade show active" id="product-desc" role="tabpanel" aria-labelledby="product-desc-tab">
                                @Html.Partial("_CustomFields", Model.custom_fields)
                            </div>
                            <div class="tab-pane fade" id="product-comments" role="tabpanel" aria-labelledby="product-comments-tab">
                                @Html.Partial("_Security", Model.security)
                            </div>
                            <div class="tab-pane fade" id="product-zonasi" role="tabpanel" aria-labelledby="product-zonasi-tab">
                                @*@Html.Partial("_Zonasi")*@
                            </div>
                        </div>
                        
                        <hr />
                        
                    </div>
                    </div>
            </div>
            <!-- /.col-md-2 -->

        </div>
        <!-- /.row -->

    </div><!-- /.container-fluid -->
</div>
<!-- /.content -->

<script type="text/javascript">
        var user_avatar = '';
                var dz_user_avatar = $(".dropzone.avatar").dropzone({
                url: "http://localhost/restaurant/public/uploads/store",
                addRemoveLinks: true,
                maxFiles: 1,
                init: function () {
                                    },
                accept: function (file, done) {
                    dzAccept(file, done, this.element, "http://127.0.0.1/restaurant/images/icons");
                },
                sending: function (file, xhr, formData) {
                    dzSending(this, file, formData, 'nIj2Rszyfe2L4dbghaFbEQHMtmX9oXDHowl3RVyd');
                },
                maxfilesexceeded: function (file) {
                    dz_user_avatar[0].mockFile = '';
                    dzMaxfile(this, file);
                },
                complete: function (file) {
                    dzComplete(this, file, user_avatar, dz_user_avatar[0].mockFile);
                    dz_user_avatar[0].mockFile = file;
                },
                removedfile: function (file) {
                    dzRemoveFile(
                        file, user_avatar, 'http://localhost/restaurant/public/settings/users/remove-media',
                        'avatar', '1', 'http://localhost/restaurant/public/uplaods/clear', 'nIj2Rszyfe2L4dbghaFbEQHMtmX9oXDHowl3RVyd'
                    );
                }
            });
        dz_user_avatar[0].mockFile = user_avatar;
        dropzoneFields['avatar'] = dz_user_avatar;
</script>
<script type="text/template" data-template="mediaitem">
    <div class="col-sm-3">
        <div class="card clickble">
            <img class="card-img"
                 src="${src}"
                 data-name="${file_name}"
                 data-type="${mime_type}"
                 data-size="${size}"
                 data-uuid="${uuid}"
                 alt="Card image">
            <div class="card-footer">
                <small>${name} (${formated_size})</small><br> <small class="text-muted">${updated_at}</small>
            </div>
        </div>
    </div>
</script>

<script type="text/javascript">
        var triggerButton;
        var dropzoneIndex = '';

        /**
        * add selected media to dropzone
        */
    function initDropzone(index = '') {
        console.log("dragggg");
            var dz = dropzoneFields[index][0];
            $('#mediaModal .card.clickble').on('click', function () {
                var img = $(this).find('.card-img');
                console.log(dz.mockFile);
                if (dz.mockFile !== '') {
                    dz.dropzone.removeFile(dz.mockFile);
                }
                var mockFile = {name: img.data('name'), size: img.data('size'), type: img.data('type'), upload: {uuid: img.data('uuid')}};
                dz.mockFile = mockFile;
                dz.dropzone.element.children[0].value = img.data('uuid');
                dz.dropzone.options.addedfile.call(dz.dropzone, mockFile);
                dz.dropzone.options.thumbnail.call(dz.dropzone, mockFile, img.attr('src'));
                dz.dropzone.previewsContainer.lastChild.classList.add('dz-success');
                dz.dropzone.previewsContainer.lastChild.classList.add('dz-complete');
                $('#mediaModal').modal('hide');
            });
        }

        function initSelectCollection(){
            var select = $('#selectCollection #collection_name');
            $.ajax({
                url: "http://localhost/restaurant/public/uploads/collectionsNames",
                type: 'GET',
                success: function (data, status) {
                    const collections = Object.keys(data.data).map(i => data.data[i])
                    collections.forEach(function (coll) {
                        if(coll.value === dropzoneIndex){
                            select.append('<option selected value="'+coll.value+'">'+coll.title+'</option>');
                            select.val(coll.value).trigger('change');
                        }else{
                            select.append('<option value="'+coll.value+'">'+coll.title+'</option>');
                        }
                    })
                }
            });
        }

        /**
         * resize buttons
         * */
        $('#mediaModal #resizeItems button').on('click',function () {
            $('#mediaModal #resizeItems button').attr('class','btn btn-outline-secondary');
            $(this).removeClass('btn-outline-secondary').addClass('btn-primary')
            var size = $(this).data('size');
            var mediaItems = $('#mediaModal .medias-items')
                .find('div[class^="col-sm"]')
                .removeAttr( "class" )
                .addClass('col-sm-'+size);
        });

        /**
         * load media with ajax
         */
        function loadMedia(url) {

            var itemTpl = $('script[data-template="mediaitem"]').text().split(/\$\{(.+?)\}/g);
            var items = [];
            var mediaItems = $('#mediaModal .medias-items');
            $.ajax({
                url: url,
                type: 'GET',
                success: function (data, status) {
                    if(status === 'success'){
                        data = JSON.parse(data);
                        data.forEach(function (item) {
                            items.push({
                                src: item.thumb,
                                file_name: item.file_name,
                                mime_type: item.mime_type,
                                size: item.size,
                                formated_size: item.formated_size,
                                uuid: item.custom_properties.uuid,
                                name: item.name,
                                updated_at: item.updated_at,
                            });
                        });
                    }else{
                        mediaItems.find('.card.loader').html('Error please refresh page or use (Ctrl+F5)');
                    }
                },
                error : function(data, status, error){
                    mediaItems.find('.card.loader').html('Error please refresh page or use (Ctrl+F5)');
                },
                complete: function (data, status) {
                    if (status === 'success') {
                        mediaItems.html(items.map(function (item) {
                            return itemTpl.map(render(item)).join('');
                        }));
                        mediaItems.find('.card.loader').remove();
                        initDropzone(dropzoneIndex);
                    }else{
                        mediaItems.find('.card.loader').html('Error please refresh page or use (Ctrl+F5)');
                    }
                }
            });
        }
        $('#mediaModal').on('show.bs.modal',function (event) {
            triggerButton = $(event.relatedTarget) // Button that triggered the modal
            dropzoneIndex = triggerButton.data('dropzone'); // Extract info from data-* attributes
            loadMedia("http://localhost/restaurant/public/uploads/all/"+dropzoneIndex);
            initSelectCollection();
        });
        $('#selectCollection #collection_name').on('change',function () {
            loadMedia("http://localhost/restaurant/public/uploads/all/"+$(this).val());
        })
</script>
<script>
        $(document).ready(function () {
            var id = "@Model.main_fields.id";
            $("#btn-create").click(function () {
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("CreateOrganization", "Users")",
                    data: { id: id }
                }).done(function (data) {
                    //kondisi jika ajax berhasil dikerjakan
                    //memasukan view dari controller ke modal
                    $("#modal-default .modal-content").html(data);
                }).fail(function (error) {
                    //kondisi jika gagal
                    alert(error.responseText);
                });
            });

            //untuk Edit
            $(".btn-edit").click(function () {
                var id = $(this).data("id");
                $.ajax({
                    type: "GET",
                    url: "@Url.Action("EditOrganization", "Users")",
                    data: { id: id }
                }).done(function (data) {
                    $("#modal-default .modal-content").html(data);
                }).fail(function (error) {
                    //kondisi jika gagal
                    alert(error.responseText);
                });
            });
        });

        $(".btn-delete").click(function () {
            var id = $(this).data("id");

            swal({
                title: "Delete Confirmation",
                text: "Are you sure want to Delete?",
                type: "warning",
                showCancelButton: true,
                confirmButtonText: "Yes, Delete it!"
            }).then(function (isConfirm) {
                if (isConfirm.dismiss) {
                    swal("Cancelled", "Delete Cancelled!", "info");
                } else {
                    $.ajax({
                        type: "GET",
                        url: "@Url.Action("DeleteOrganization", "Users")",
                        data: { id: id }
                    }).done(function (data) {
                        $("#modal-popup .modal-content").html(data);
                        window.location.href = location.protocol + "//" + location.host + "@Url.Action("Edit", new {id = Model.main_fields.id})"
                    }).fail(function (error) {
                        alert(error.responseText);
                    });
                }
            });

        });
</script>