
@model ServiceOne.Models.EMPLOYEE

@using (Html.BeginForm("Create", "Employees", FormMethod.Post, new { @class = "form", id = "create-edit-form" }))
{
    <div class="modal-header">
        <h4 class="modal-title">@ViewBag.Header</h4>
        <button type="button" class="close" data-dismiss="modal">&times;</button>
    </div>
    <div class="modal-body">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group row">
            <label for="dep_id" class="col-2 control-label text-right">Department</label>
            <div class="col-10">
                @Html.DropDownList("dep_id", (IEnumerable<SelectListItem>)ViewBag.Departments, new { dep_id = "Value", @class = "form-control" })
                <div class="form-text text-muted">
                    @Html.ValidationMessageFor(model => model.dep_id, "", new { @class = "text-danger" })
                    Insert dep_id
                </div>
            </div>
        </div>

        <div class="form-group row">
            <label for="dev_id" class="col-2 control-label text-right">Devision</label>
            <div class="col-10">
                @Html.DropDownList("dev_id", (IEnumerable<SelectListItem>)ViewBag.Devisions, new { dev_id = "Value", @class = "form-control" })
                <div class="form-text text-muted">
                    @Html.ValidationMessageFor(model => model.dev_id, "", new { @class = "text-danger" })
                    Insert dev_id
                </div>
            </div>
        </div>

        <div class="form-group row">
            <label for="emp_name" class="col-2 control-label text-right">Name</label>
            <div class="col-10">
                @Html.EditorFor(model => model.emp_name, new { htmlAttributes = new { @class = "form-control" } })
                <div class="form-text text-muted">
                    @Html.ValidationMessageFor(model => model.emp_name, "", new { @class = "text-danger" })
                    Insert emp_name
                </div>
            </div>
        </div>

        <div class="form-group row">
            <label for="position" class="col-2 control-label text-right">Position</label>
            <div class="col-10">
                @Html.DropDownList("position", (IEnumerable<SelectListItem>)ViewBag.Positions, new { position = "Value", @class = "form-control" })
                <div class="form-text text-muted">
                    @Html.ValidationMessageFor(model => model.position, "", new { @class = "text-danger" })
                    Insert position
                </div>
            </div>
        </div>

        <div class="form-group row">
            <label for="upline_id" class="col-2 control-label text-right">Upline</label>
            <div class="col-10">
                @Html.EditorFor(model => model.upline_id, new { htmlAttributes = new { @class = "form-control" } })
                <div class="form-text text-muted">
                    @Html.ValidationMessageFor(model => model.upline_id, "", new { @class = "text-danger" })
                    Insert upline_id
                </div>
            </div>
        </div>

    </div>
    <div class="modal-footer">
        <input id="btn-save" type="button" value="Submit" class="btn btn-default" />
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
    </div>
}

<script>
    $(document).ready(function () {
        $("#btn-save").click(function () {
            var data = $("#create-edit-form").serialize();
            $.ajax({
                type: "POST",
                url: "@Url.Action("Create", "Employees")",
                data: data
            }).done(function (response) {
                if (response.result.Message == "ValidationError") {
                    $("#modal-default .modal-content").html(response.partialView);
                }
                else {
                    if (response.result.IsSucceed) {
                        swal({
                            title: "Success",
                            text: response.result.Message,
                            type: "success"
                        }).then(function () {
                            window.location.href = location.protocol + "//" + location.host + "@Url.Action("Index")"
                        })
                    }
                    else {
                        swal("Failed", response.result.Message, "error");
                    }
                }
            }).fail(function () {

            });
        });

        $('#dep_id').change(function () {
            var dep_id = document.getElementById("dep_id").value;
            console.log(dep_id);

            $.ajax({
                type: "GET",
                url: "@Url.Action("GetDevision", "Employees")",
                data: { dep_id: dep_id }
            }).done(function (response) {
                //console.log(response);
                var select = $("#dev_id");
                select.empty();
                select.append($('<option/>', {
                    value: 0,
                    text: "Pilih Devisi"
                }));
                $.each(response.devisions, function (index, itemData) {
                    select.append($('<option/>', {
                        value: itemData.Value,
                        text: itemData.Text
                    }));
                    //console.log(itemData.Value);
                });
            }).fail(function () {

            });

        });
    });
</script>
